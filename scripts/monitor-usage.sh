#!/bin/bash
# monitor-usage.sh - Monitorar uso das APIs

echo "üìä API Usage Monitoring - $(date)"
echo "================================="

# Verificar limites Grok Free
GROK_REQUESTS=$(redis-cli get "grok:daily_requests:$(date +%Y%m%d)")
echo "üöÄ Grok Free Tier:"
echo "   Requests hoje: ${GROK_REQUESTS:-0}/2000"
echo "   Status: $([ ${GROK_REQUESTS:-0} -lt 1800 ] && echo "‚úÖ OK" || echo "‚ö†Ô∏è Pr√≥ximo do limite")"

# Verificar custos Gemini
GEMINI_COST=$(redis-cli get "gemini:daily_cost:$(date +%Y%m%d)")
echo ""
echo "üß† Gemini Pro:"
echo "   Custo hoje: $${GEMINI_COST:-0.00}/$12.00"
echo "   Status: $([ $(echo "${GEMINI_COST:-0} < 10" | bc -l) -eq 1 ] && echo "‚úÖ OK" || echo "‚ö†Ô∏è Alto custo")"

# Recomenda√ß√µes autom√°ticas
echo ""
echo "üí° Recomenda√ß√µes:"
if [ ${GROK_REQUESTS:-0} -gt 1500 ]; then
    echo "   - Usar mais Gemini Flash para queries m√©dias"
fi

if [ $(echo "${GEMINI_COST:-0} > 8" | bc -l) -eq 1 ]; then
    echo "   - Priorizar Grok para queries simples"
    echo "   - Implementar cache mais agressivo"
fi

echo ""
echo "üìà Pr√≥xima otimiza√ß√£o em: $((2000 - ${GROK_REQUESTS:-0})) requests Grok dispon√≠veis"
