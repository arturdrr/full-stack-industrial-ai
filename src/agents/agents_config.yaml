# ================================
# AGENTES COM ROTEAMENTO OTIMIZADO
# ================================
version: "1.3.0"
environment: "grok-gemini-optimized"

routing_intelligence:
  enabled: true
  
  # Classificador de queries
  query_classifier:
    simple_patterns:
      - "What is"
      - "How to"
      - "Quick question"
      - "Simple code"
      - regex: "^.{1,100}$"  # Queries muito curtas
      
    complex_patterns:
      - "Analyze"
      - "Compare and contrast"
      - "Write a detailed"
      - "Complex reasoning"
      - regex: "^.{500,}$"   # Queries longas

agents:
  # Quick Response Agent - usa Grok Free
  quick_agent:
    name: "Quick Response Agent"
    preferred_models: ["grok-free"]
    max_tokens: 500
    use_cases:
      - "simple_qa"
      - "basic_code_snippets"
      - "quick_explanations"
      - "status_checks"
    budget_limit: 0.00  # Grátis!
    
  # Main Agent - usa Gemini Flash
  main_agent:
    name: "Main Processing Agent"
    preferred_models: ["gpt-3.5-turbo"]  # Gemini Flash
    max_tokens: 2048
    use_cases:
      - "medium_complexity_tasks"
      - "code_generation"
      - "data_analysis"
      - "workflow_coordination"
    budget_limit: 4.00  # $4/dia
    
  # Expert Agent - usa Gemini Pro
  expert_agent:
    name: "Expert Reasoning Agent"
    preferred_models: ["gpt-4"]  # Gemini Pro
    max_tokens: 8192
    use_cases:
      - "complex_reasoning"
      - "detailed_analysis"
      - "strategic_planning"
      - "high_priority_tasks"
    budget_limit: 8.00  # $8/dia

# ================================
# ROUTING RULES POR AGENTE
# ================================
agent_routing:
  quick_agent:
    primary: "grok-free"
    fallback: ["gpt-3.5-turbo", "ollama"]
    max_cost_per_request: 0.00
    
  main_agent:
    primary: "gpt-3.5-turbo"  # Gemini Flash
    fallback: ["grok-free", "gpt-4", "ollama"]
    max_cost_per_request: 0.02
    
  expert_agent:
    primary: "gpt-4"  # Gemini Pro
    fallback: ["gpt-3.5-turbo", "abacus-gpt-4", "ollama"]
    max_cost_per_request: 0.10

# ================================
# OTIMIZAÇÃO DE PROMPTS
# ================================
prompt_optimization:
  # Prompts mais curtos para Grok
  grok_optimizations:
    - "Use concise responses"
    - "Limit to essential information"
    - "Avoid verbose explanations"
    
  # Prompts completos para Gemini
  gemini_optimizations:
    - "Provide detailed analysis"
    - "Include reasoning steps"
    - "Use full context window when needed"